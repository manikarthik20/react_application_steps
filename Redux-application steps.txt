React - Redux Frist Application Steps
====================================
step1:Create a new react project first


>npx create-react-app reduxcounter


step2:switch in to project location


>cd reduxcounter


step3:open code in to vscode ide
reduxcounter>code .


step4: install redux in your project use the following commands


reduxcounter>npm install redux
reduxcounter>npm install react-redux
reduxcounter>npm install --save-dev redux-devtools
or
npm i redux-devtools-extension


step5: add bootstrap in to your project
goto getbootstrap.com -->copy css link and add in to index.html
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">


step6:first create a Reducer along with initial state and action(Reducer.js)
//declare initial state value
let initialState = {count: 0}


function reducer(state=initialState,action){


if(action.type==="INCREMENT"){
return{
count:state.count+1
};
}
if(action.type==="DECREMENT"){
return{
count:state.count-1
};
}
return state;


}
export default reducer;


step7:create a store in your index.js to access in your component wrappup through provider


import React from "react";
import ReactDOM from "react-dom";
import "./index.css";
import App from "./App";
import reducer from "./reducer"; //import reducer
import { createStore } from "redux"; //to create store
import { Provider } from "react-redux";//to access store in to your component


//create a redux store
let store = createStore(reducer);


ReactDOM.render(
<Provider store={store}>
<App />
</Provider>,
document.getElementById("root")
);


step8:create a UI through Event Handler(dispatcher) connect store


import React from "react";
import { connect } from "react-redux"; //Connect to store


class App extends React.Component {
increment = () => { //increment action
this.props.dispatch({
type: "INCREMENT"
});
};


decrement = () => { //Descrement action
this.props.dispatch({
type: "DECREMENT"
});
};
//design view
render() {
return (
<div className="App mt-5">
<center>
<button onClick={this.increment} className="btn btn-success mr-5">
Increment
</button><span style={{padding:5}}></span>
<button onClick={this.decrement} className="btn btn-danger">
Decrement
</button>
<h2 className="mt-5 display-1">{this.props.count}</h2>
</center>
{/* <Home /> */}
</div>
);
}
}


const mapStateToProps = state => { //to access state mapState through access any component
return {
count: state.count
};
};

export default connect(mapStateToProps)(App);